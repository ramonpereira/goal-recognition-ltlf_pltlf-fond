(define (domain triangle-tire)
  (:requirements :typing :strips :non-deterministic)
  (:types location)
  (:predicates (vehicleat ?loc - location) (spare-in ?loc - location) (road ?from - location ?to - location) (not-flattire) (turnDomain) (q4 ?loc14 - location ?loc51 - location) (q1 ?loc14 - location ?loc51 - location) (q3 ?loc14 - location ?loc51 - location) (q2 ?loc14 - location ?loc51 - location))
  (:action move-car
    :parameters (?from - location ?to - location)
    :precondition (and (vehicleat ?from) (road ?from ?to) (not-flattire) (turnDomain))
    :effect (and (oneof (and (vehicleat ?to) (not (vehicleat ?from))) (and (vehicleat ?to) (not (vehicleat ?from)) (not (not-flattire)))) (not (turnDomain)))
  )
  (:action changetire
    :parameters (?loc - location)
    :precondition (and (spare-in ?loc) (vehicleat ?loc) (turnDomain))
    :effect (and (not (spare-in ?loc)) (not-flattire) (not (turnDomain)))
  )
  (:action trans-0
    :parameters (?loc14 - location ?loc51 - location)
    :precondition (and (or (and (q1 ?loc14 ?loc51) (vehicleat ?loc14) (vehicleat ?loc51)) (and (q2 ?loc14 ?loc51) (vehicleat ?loc14) (vehicleat ?loc51)) (and (q3 ?loc14 ?loc51) (vehicleat ?loc14)) (and (q4 ?loc14 ?loc51) (vehicleat ?loc14))) (not (turnDomain)))
    :effect (and (q4 ?loc14 ?loc51) (not (q1 ?loc14 ?loc51)) (not (q3 ?loc14 ?loc51)) (not (q2 ?loc14 ?loc51)) (turnDomain))
  )
  (:action trans-2
    :parameters (?loc14 - location ?loc51 - location)
    :precondition (and (or (and (q1 ?loc14 ?loc51) (not (vehicleat ?loc14)) (vehicleat ?loc51)) (and (q2 ?loc14 ?loc51) (not (vehicleat ?loc14)) (vehicleat ?loc51)) (and (q3 ?loc14 ?loc51) (not (vehicleat ?loc14))) (and (q4 ?loc14 ?loc51) (not (vehicleat ?loc14)))) (not (turnDomain)))
    :effect (and (q3 ?loc14 ?loc51) (not (q4 ?loc14 ?loc51)) (not (q1 ?loc14 ?loc51)) (not (q2 ?loc14 ?loc51)) (turnDomain))
  )
  (:action trans-3
    :parameters (?loc14 - location ?loc51 - location)
    :precondition (and (or (and (q1 ?loc14 ?loc51) (not (vehicleat ?loc14)) (not (vehicleat ?loc51))) (and (q1 ?loc14 ?loc51) (vehicleat ?loc14) (not (vehicleat ?loc51))) (and (q2 ?loc14 ?loc51) (not (vehicleat ?loc14)) (not (vehicleat ?loc51))) (and (q2 ?loc14 ?loc51) (vehicleat ?loc14) (not (vehicleat ?loc51)))) (not (turnDomain)))
    :effect (and (q2 ?loc14 ?loc51) (not (q4 ?loc14 ?loc51)) (not (q1 ?loc14 ?loc51)) (not (q3 ?loc14 ?loc51)) (turnDomain))
  )
)