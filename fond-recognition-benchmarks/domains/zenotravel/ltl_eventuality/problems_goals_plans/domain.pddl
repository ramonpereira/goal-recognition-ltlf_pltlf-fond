(define (domain zenotravel)
  (:requirements :typing :non-deterministic)
  (:types aircraft person city flevel)
  (:predicates (atperson ?p - person ?c - city)
               (ataircraft ?a - aircraft ?c - city)
         (boarding ?p - person ?a - aircraft)
         (notboarding ?p - person)
         (in ?p - person ?a - aircraft)
         (debarking ?p - person ?a - aircraft)
         (notdebarking ?p - person)
         (fuellevel ?a - aircraft ?l - flevel)
         (next ?l1 ?l2 - flevel)
         (flying ?a - aircraft ?c - city)
         (zooming ?a - aircraft ?c - city)
         (refueling ?a - aircraft)
         (notrefueling ?a - aircraft)
  )
  (:action start-boarding
    :parameters (?p - person ?a - aircraft ?c - city)
    :precondition (and (atperson ?p ?c) (ataircraft ?a ?c))
    :effect (and (not (atperson ?p ?c)) (not (notboarding ?p)) (boarding ?p ?a))
  )
  (:action complete-boarding
    :parameters (?p - person ?a - aircraft ?c - city)
    :precondition (and (boarding ?p ?a) (ataircraft ?a ?c))
    :effect (oneof (and) (and (not (boarding ?p ?a)) (in ?p ?a) (notboarding ?p)))
  )
  (:action start-debarking
    :parameters (?p - person ?a - aircraft ?c - city)
    :precondition (and (in ?p ?a) (ataircraft ?a ?c))
    :effect (and (not (in ?p ?a)) (not (notdebarking ?p)) (debarking ?p ?a))
  )
  (:action complete-debarking
    :parameters (?p - person ?a - aircraft ?c - city)
    :precondition (and (debarking ?p ?a) (ataircraft ?a ?c))
    :effect (oneof (and) (and (not (debarking ?p ?a)) (atperson ?p ?c) (notdebarking ?p)))
  )
  (:action start-flying
    :parameters (?a - aircraft ?c1 ?c2 - city ?l1 ?l2 - flevel)
    :precondition (and (ataircraft ?a ?c1) (fuellevel ?a ?l1) (next ?l2 ?l1) (notrefueling ?a)
                       (forall (?p - person) (and (notboarding ?p) (notdebarking ?p))))
    :effect (and (not (ataircraft ?a ?c1)) (flying ?a ?c2))
  )
  (:action complete-flying
    :parameters (?a - aircraft ?c2 - city ?l1 ?l2 - flevel)
    :precondition (and (flying ?a ?c2) (fuellevel ?a ?l1) (next ?l2 ?l1))
    :effect (oneof (and) (and (not (flying ?a ?c2)) (ataircraft ?a ?c2) (not (fuellevel ?a ?l1)) (fuellevel ?a ?l2)))
  )
  (:action start-zooming
    :parameters (?a - aircraft ?c1 ?c2 - city ?l1 ?l2 ?l3 - flevel)
    :precondition (and (ataircraft ?a ?c1) (fuellevel ?a ?l1) (next ?l2 ?l1) (next ?l3 ?l2) (notrefueling ?a)
                       (forall (?p - person) (and (notboarding ?p) (notdebarking ?p))))
    :effect (and (not (ataircraft ?a ?c1)) (zooming ?a ?c2))
  )
  (:action complete-zooming
   :parameters (?a - aircraft ?c2 - city ?l1 ?l2 ?l3 - flevel)
   :precondition (and (zooming ?a ?c2) (fuellevel ?a ?l1) (next ?l2 ?l1) (next ?l3 ?l2))
   :effect (oneof (and) (and (not (zooming ?a ?c2)) (ataircraft ?a ?c2) (not (fuellevel ?a ?l1)) (fuellevel ?a ?l3)))
  )
  (:action start-refueling
    :parameters (?a - aircraft ?c - city ?l ?l1 - flevel)
    :precondition (and (ataircraft ?a ?c) (notrefueling ?a) (fuellevel ?a ?l) (next ?l ?l1))
    :effect (and (refueling ?a) (not (notrefueling ?a)))
  )
  (:action complete-refuling
    :parameters (?a - aircraft ?l ?l1 - flevel)
    :precondition (and (refueling ?a) (fuellevel ?a ?l) (next ?l ?l1))
    :effect (oneof (and) (and (not (refueling ?a)) (notrefueling ?a) (fuellevel ?a ?l1) (not (fuellevel ?a ?l))))
  )
)

